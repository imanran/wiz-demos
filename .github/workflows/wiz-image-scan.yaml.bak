# Requires credentials for a Wiz Service Account to authenticate to Wiz.
# For your demo use, specify a Wiz Service Account and CI/CD Policies in CSA-Prod.
# Reference: https://docs.wiz.io/wiz-docs/docs/service-accounts-settings
#
# Wiz Service Account permissions: create:security_scans, and update:security_scans (only when using "wizcli docker tag").
# Reference: https://docs.wiz.io/wiz-docs/docs/github-pipeline
#
# Store CLIENT_ID as secrets.WIZ_CLIENT_ID and SECRET as secrets.WIZ_CLIENT_SECRET
# Reference: https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions

name: 'wiz-image-scan'

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - 'main'
  workflow_dispatch:

jobs:
  wiz-image-scan:
    name: 'WizCLI Image Scan'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      container: ${{ steps.filter.outputs.container }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          container:
            - 'container/**'

  wiz-image-scan-container:
    name: 'WizCLI Image Scan Container'
    needs: wiz-image-scan
    if: ${{ github.event_name == 'workflow_dispatch' || needs.wiz-image-scan.outputs.container == 'true' }}
    env:
      SCAN_PATH: 'container'
      CICD_IAC_POLICIES: 'SecCloudDev-Demo-Block-Misconfigurations,SecCloudDev-Demo-Block-Secrets'
      CICD_IMG_POLICIES: 'SecCloudDev-Demo-Block-Secrets,SecCloudDev-Demo-Block-Vulnerabilities'
      IMAGE: 'wizard/wiz-example-image'
      TAG: ${{ github.run_number }}

    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    #- name: Login to a Docker Registry
    #  if: ${{ secrets.REGISTRY_USER != '' }}
    #  uses: docker/login-action@v3.0.0
    #  with:
    #    username: ${{ secrets.REGISTRY_USER }}
    #    password: ${{ secrets.REGISTRY_PASS }}

    - name: Download WizCLI
      run: |
        curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

    - name: Authenticate to Wiz
      run: ./wizcli auth --id "${WIZ_CLIENT_ID}" --secret "${WIZ_CLIENT_SECRET}"
      env:
        WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
        WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

    - name: Build the Docker Image
      run: |
        docker build "${SCAN_PATH}" -t "${IMAGE}:${TAG}"

    - name: Run WizCLI IaC Scan
      run: |
        ./wizcli iac scan --path "${SCAN_PATH}" --policy "${CICD_IAC_POLICIES}" --policy-hits-only --output wiz-iac-scan-results.json,sarif,true
      continue-on-error: true

    - uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: wiz-iac-scan-results.json
      continue-on-error: true
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}

    - name: Run WizCLI Dir Scan
      run: |
        ./wizcli dir scan --path ${SCAN_PATH} --policy "${CICD_IMG_POLICIES}" --policy-hits-only --output wiz-dir-scan-results.json,sarif,true
      continue-on-error: true

    - uses: github/codeql-action/upload-sarif@v2
      with:
        category: directory-scans
        sarif_file: wiz-dir-scan-results.json
      continue-on-error: true
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}

    - name: Run WizCLI Docker Scan
      run: |
        ./wizcli docker scan --image "${IMAGE}:${TAG}" --dockerfile "${SCAN_PATH}/Dockerfile" --policy "${CICD_IMG_POLICIES}" --policy-hits-only --output wiz-image-scan-results.json,sarif,true
      continue-on-error: true

    - uses: github/codeql-action/upload-sarif@v2
      with:
        category: docker-scans
        sarif_file: wiz-image-scan-results.json
      continue-on-error: true
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}

    #- name: Push Docker Image
    #  if: ${{ secrets.REGISTRY_USER != '' }}
    #  run: |
    #    docker push "${IMAGE}:${TAG}"

    #- name: WizCLI Docker Tag
    #  if: ${{ secrets.REGISTRY_USER != '' }}
    #  run: |
    #    docker images list
    #    docker images --digests
    #    ./wizcli docker tag --image "${IMAGE}:${TAG}"
